// <auto-generated />
using System;
using MASAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MASAPI.Migrations
{
    [DbContext(typeof(HealthcareContext))]
    [Migration("20220526085208_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MASAPI.Models.Doctor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<char>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("ID")
                        .HasName("Doctor_PK");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Gender = 'M',
                            HireDate = new DateTime(2022, 5, 26, 8, 52, 8, 23, DateTimeKind.Utc).AddTicks(680),
                            Name = "Artur",
                            PhoneNumber = "135792468",
                            Surname = "Arturowski",
                            Title = "Habilitated Doctor"
                        },
                        new
                        {
                            ID = 2,
                            Gender = 'F',
                            HireDate = new DateTime(2022, 5, 26, 8, 52, 8, 23, DateTimeKind.Utc).AddTicks(680),
                            Name = "Agata",
                            PhoneNumber = "124578359",
                            Surname = "Agatowska",
                            Title = "Licenced Doctor"
                        });
                });

            modelBuilder.Entity("MASAPI.Models.DoctorHospital", b =>
                {
                    b.Property<int>("IdDoctor")
                        .HasColumnType("integer");

                    b.Property<int>("IdHospital")
                        .HasColumnType("integer");

                    b.HasKey("IdDoctor", "IdHospital")
                        .HasName("DoctorHospital_PK");

                    b.HasIndex("IdHospital");

                    b.ToTable("Doctor_Hospital", (string)null);

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            IdHospital = 2
                        },
                        new
                        {
                            IdDoctor = 2,
                            IdHospital = 1
                        });
                });

            modelBuilder.Entity("MASAPI.Models.Hospital", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ID")
                        .HasName("Hospital_PK");

                    b.ToTable("Hospitals");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Cybernetyki",
                            Name = "Onkologiczny",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            ID = 2,
                            Address = "Ameryki",
                            Name = "Psychologiczny",
                            PhoneNumber = "987654321"
                        });
                });

            modelBuilder.Entity("MASAPI.Models.Patient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Accepted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<char>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("character(1)");

                    b.Property<int>("IdHospital")
                        .HasColumnType("integer");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<string>("Sickness")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ID")
                        .HasName("Patient_PK");

                    b.HasIndex("IdHospital");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Accepted = new DateTime(2022, 5, 26, 8, 52, 8, 23, DateTimeKind.Utc).AddTicks(2210),
                            Gender = 'M',
                            IdHospital = 1,
                            Name = "Piotrek",
                            PhoneNumber = "123789456",
                            Sickness = "Too much alcohol",
                            Surname = "Zambrowski"
                        },
                        new
                        {
                            ID = 2,
                            Accepted = new DateTime(2022, 5, 26, 8, 52, 8, 23, DateTimeKind.Utc).AddTicks(2220),
                            Gender = 'F',
                            IdHospital = 2,
                            Name = "Angelika",
                            PhoneNumber = "456789123",
                            Sickness = "Too much weed",
                            Surname = "Patusiar"
                        });
                });

            modelBuilder.Entity("MASAPI.Models.DoctorHospital", b =>
                {
                    b.HasOne("MASAPI.Models.Doctor", "IdDoctorNavigation")
                        .WithMany("Hospitals")
                        .HasForeignKey("IdDoctor")
                        .IsRequired();

                    b.HasOne("MASAPI.Models.Hospital", "IdHospitalNavigation")
                        .WithMany("Doctors")
                        .HasForeignKey("IdHospital")
                        .IsRequired();

                    b.Navigation("IdDoctorNavigation");

                    b.Navigation("IdHospitalNavigation");
                });

            modelBuilder.Entity("MASAPI.Models.Patient", b =>
                {
                    b.HasOne("MASAPI.Models.Hospital", "IdHospitalNavigation")
                        .WithMany("Patients")
                        .HasForeignKey("IdHospital")
                        .IsRequired();

                    b.Navigation("IdHospitalNavigation");
                });

            modelBuilder.Entity("MASAPI.Models.Doctor", b =>
                {
                    b.Navigation("Hospitals");
                });

            modelBuilder.Entity("MASAPI.Models.Hospital", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
